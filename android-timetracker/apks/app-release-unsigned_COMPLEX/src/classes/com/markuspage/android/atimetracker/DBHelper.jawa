record `com.markuspage.android.atimetracker.DBHelper` @kind class @AccessFlag PUBLIC extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
}
global `java.lang.String`[] `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_COLUMNS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_ID` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_TABLE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.CREATE_ACTIVITY_TABLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.markuspage.android.atimetracker.DBHelper.DBVERSION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.END` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ID_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.RANGES_TABLE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@com.markuspage.android.atimetracker.DBHelper.RANGE_COLUMNS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.START` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.TIMETRACKER_DB_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/markuspage/android/atimetracker/DBHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0c2da0.  v4:= 2I;
  #L0c2da2.  v3:= 1I;
  #L0c2da4.  v2:= 0I;
  #L0c2da6.  v0:= new `java.lang.String`[v4];
  #L0c2daa.  v1:= "start" @kind object;
  #L0c2dae.  v0[v2]:= v1 @kind object;
  #L0c2db2.  v1:= "end" @kind object;
  #L0c2db6.  v0[v3]:= v1 @kind object;
  #L0c2dba.  `@@com.markuspage.android.atimetracker.DBHelper.RANGE_COLUMNS` @type ^`java.lang.String`[] := v0 @kind object;
  #L0c2dbe.  v0:= new `java.lang.String`[v4];
  #L0c2dc2.  v1:= "ROWID" @kind object;
  #L0c2dc6.  v0[v2]:= v1 @kind object;
  #L0c2dca.  v1:= "name" @kind object;
  #L0c2dce.  v0[v3]:= v1 @kind object;
  #L0c2dd2.  `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_COLUMNS` @type ^`java.lang.String`[] := v0 @kind object;
  #L0c2dd6.  return @kind void;
}
procedure `void` `<init>`(`com.markuspage.android.atimetracker.DBHelper` v6 @kind this, `android.content.Context` v7 @kind object @name `context`) @signature `Lcom/markuspage/android/atimetracker/DBHelper;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0c2de8.  v3:= "timetracker.db" @kind object;
  #L0c2dec.  v4:= 0I;
  #L0c2dee.  v5:= 5I;
  #L0c2df0.  call `<init>`(v6, v7, v3, v4, v5) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L0c2df6.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0c2dfc.  v3:= temp @kind object;
  #L0c2dfe.  call temp:= `getTimeZone`(v3) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0c2e04.  v3:= temp @kind object;
  #L0c2e06.  call temp:= `getDisplayName`(v3) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0c2e0c.  v0:= temp @kind object;
  #L0c2e0e.  v3:= 2I;
  #L0c2e10.  v2:= new `java.lang.String`[v3];
  #L0c2e14.  v3:= 0I;
  #L0c2e16.  v4:= "n/a" @kind object;
  #L0c2e1a.  v2[v3]:= v4 @kind object;
  #L0c2e1e.  v3:= 1I;
  #L0c2e20.  v2[v3]:= v0 @kind object;
  #L0c2e24.  v3:= length @variable v2;
  #L0c2e26.  v3:= v3 + -1;
  #L0c2e2a.  v1:= v2[v3] @kind object;
  #L0c2e2e.  v3:= "leak-256" @kind object;
  #L0c2e32.  call temp:= `d`(v3, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0c2e38.  return @kind void;
}
procedure `void` `onCreate`(`com.markuspage.android.atimetracker.DBHelper` v7 @kind this, `android.database.sqlite.SQLiteDatabase` v8 @kind object @name `db`) @signature `Lcom/markuspage/android/atimetracker/DBHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0c2e4c.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0c2e52.  v3:= temp @kind object;
  #L0c2e54.  call temp:= `getTimeZone`(v3) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0c2e5a.  v3:= temp @kind object;
  #L0c2e5c.  call temp:= `getDisplayName`(v3) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0c2e62.  v0:= temp @kind object;
  #L0c2e64.  v2:= new `java.util.HashMap`;
  #L0c2e68.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L0c2e6e.  v3:= "test" @kind object;
  #L0c2e72.  v4:= new `java.util.HashMap`;
  #L0c2e76.  call `<init>`(v4) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L0c2e7c.  call temp:= `put`(v2, v3, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c2e82.  v3:= "test" @kind object;
  #L0c2e86.  call temp:= `get`(v2, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c2e8c.  v3:= temp @kind object;
  #L0c2e8e.  v3:= (`java.util.HashMap`) v3 @kind object;
  #L0c2e92.  v4:= "test" @kind object;
  #L0c2e96.  call temp:= `put`(v3, v4, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c2e9c.  v3:= "test" @kind object;
  #L0c2ea0.  call temp:= `get`(v2, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c2ea6.  v3:= temp @kind object;
  #L0c2ea8.  v3:= (`java.util.HashMap`) v3 @kind object;
  #L0c2eac.  v4:= "test" @kind object;
  #L0c2eb0.  call temp:= `get`(v3, v4) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0c2eb6.  v1:= temp @kind object;
  #L0c2eb8.  v1:= (`java.lang.String`) v1 @kind object;
  #L0c2ebc.  v3:= "leak-257" @kind object;
  #L0c2ec0.  call temp:= `d`(v3, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0c2ec6.  v3:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L0c2eca.  v4:= 1I;
  #L0c2ecc.  v4:= new `java.lang.Object`[v4];
  #L0c2ed0.  v5:= 0I;
  #L0c2ed2.  v6:= "tasks" @kind object;
  #L0c2ed6.  v4[v5]:= v6 @kind object;
  #L0c2eda.  call temp:= `format`(v3, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c2ee0.  v3:= temp @kind object;
  #L0c2ee2.  call `execSQL`(v8, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c2ee8.  v3:= "CREATE TABLE ranges(task_id INTEGER NOT NULL,start INTEGER NOT NULL,end INTEGER);" @kind object;
  #L0c2eec.  call `execSQL`(v8, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c2ef2.  return @kind void;
}
procedure `void` `onUpgrade`(`com.markuspage.android.atimetracker.DBHelper` v15 @kind this, `android.database.sqlite.SQLiteDatabase` v16 @kind object @name `arg0`, `int` v17 @name `oldVersion`, `int` v18 @name `newVersion`) @signature `Lcom/markuspage/android/atimetracker/DBHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L0c2f04.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0c2f0a.  v11:= temp @kind object;
  #L0c2f0c.  call temp:= `getTimeZone`(v11) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0c2f12.  v11:= temp @kind object;
  #L0c2f14.  call temp:= `getDisplayName`(v11) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0c2f1a.  v2:= temp @kind object;
  #L0c2f1c.  v9:= new `java.lang.StringBuffer`;
  #L0c2f20.  call `<init>`(v9) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L0c2f26.  call temp:= `toCharArray`(v2) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L0c2f2c.  v12:= temp @kind object;
  #L0c2f2e.  v13:= length @variable v12;
  #L0c2f30.  v11:= 0I;
  #L0c2f32.  if v11 >= v13 then goto L0c2f46;
  #L0c2f36.  v1:= v12[v11] @kind char;
  #L0c2f3a.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L0c2f40.  v11:= v11 + 1;
  #L0c2f44.  goto L0c2f32;
  #L0c2f46.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L0c2f4c.  v5:= temp @kind object;
  #L0c2f4e.  v11:= "leak-258" @kind object;
  #L0c2f52.  call temp:= `d`(v11, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0c2f58.  v11:= 4I;
  #L0c2f5a.  v0:= v17;
  #L0c2f5e.  if v0 >= v11 then goto L0c3020;
  #L0c2f62.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0c2f68.  v11:= temp @kind object;
  #L0c2f6a.  call temp:= `getTimeZone`(v11) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0c2f70.  v11:= temp @kind object;
  #L0c2f72.  call temp:= `getDisplayName`(v11) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0c2f78.  v3:= temp @kind object;
  #Try_start0.  
  #L0c2f7a.  v11:= new `java.lang.Exception`;
  #L0c2f7e.  call `<init>`(v11, v3) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0c2f84.  throw v11;
  #Try_end0.  
  #L0c2f86.  v10:= Exception @type ^`java.lang.Exception` @kind object;
  #L0c2f88.  call temp:= `getMessage`(v10) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L0c2f8e.  v6:= temp @kind object;
  #L0c2f90.  v11:= "leak-259" @kind object;
  #L0c2f94.  call temp:= `d`(v11, v6) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0c2f9a.  v11:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L0c2f9e.  v12:= 1I;
  #L0c2fa0.  v12:= new `java.lang.Object`[v12];
  #L0c2fa4.  v13:= 0I;
  #L0c2fa6.  v14:= "temp" @kind object;
  #L0c2faa.  v12[v13]:= v14 @kind object;
  #L0c2fae.  call temp:= `format`(v11, v12) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c2fb4.  v11:= temp @kind object;
  #L0c2fb6.  v0:= v16 @kind object;
  #L0c2fba.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c2fc0.  v11:= "insert into temp(rowid,name) select rowid,name from tasks;" @kind object;
  #L0c2fc4.  v0:= v16 @kind object;
  #L0c2fc8.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c2fce.  v11:= "drop table tasks;" @kind object;
  #L0c2fd2.  v0:= v16 @kind object;
  #L0c2fd6.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c2fdc.  v11:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L0c2fe0.  v12:= 1I;
  #L0c2fe2.  v12:= new `java.lang.Object`[v12];
  #L0c2fe6.  v13:= 0I;
  #L0c2fe8.  v14:= "tasks" @kind object;
  #L0c2fec.  v12[v13]:= v14 @kind object;
  #L0c2ff0.  call temp:= `format`(v11, v12) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c2ff6.  v11:= temp @kind object;
  #L0c2ff8.  v0:= v16 @kind object;
  #L0c2ffc.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c3002.  v11:= "insert into tasks(_id,name) select rowid,name from temp;" @kind object;
  #L0c3006.  v0:= v16 @kind object;
  #L0c300a.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c3010.  v11:= "drop table temp;" @kind object;
  #L0c3014.  v0:= v16 @kind object;
  #L0c3018.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c301e.  return @kind void;
  #L0c3020.  v11:= 5I;
  #L0c3022.  v0:= v17;
  #L0c3026.  if v0 >= v11 then goto L0c301e;
  #L0c302a.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0c3030.  v11:= temp @kind object;
  #L0c3032.  call temp:= `getTimeZone`(v11) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0c3038.  v11:= temp @kind object;
  #L0c303a.  call temp:= `getDisplayName`(v11) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0c3040.  v4:= temp @kind object;
  #L0c3042.  v11:= 2I;
  #L0c3044.  v8:= new `java.lang.String`[v11];
  #L0c3048.  v11:= 0I;
  #L0c304a.  v12:= "n/a" @kind object;
  #L0c304e.  v8[v11]:= v12 @kind object;
  #L0c3052.  v11:= 1I;
  #L0c3054.  v8[v11]:= v4 @kind object;
  #L0c3058.  v11:= length @variable v8;
  #L0c305a.  v11:= v11 + -1;
  #L0c305e.  v7:= v8[v11] @kind object;
  #L0c3062.  v11:= "leak-260" @kind object;
  #L0c3066.  call temp:= `d`(v11, v7) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0c306c.  v11:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L0c3070.  v12:= 1I;
  #L0c3072.  v12:= new `java.lang.Object`[v12];
  #L0c3076.  v13:= 0I;
  #L0c3078.  v14:= "temp" @kind object;
  #L0c307c.  v12[v13]:= v14 @kind object;
  #L0c3080.  call temp:= `format`(v11, v12) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c3086.  v11:= temp @kind object;
  #L0c3088.  v0:= v16 @kind object;
  #L0c308c.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c3092.  v11:= "insert into temp(_id,name) select rowid,name from tasks;" @kind object;
  #L0c3096.  v0:= v16 @kind object;
  #L0c309a.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c30a0.  v11:= "drop table tasks;" @kind object;
  #L0c30a4.  v0:= v16 @kind object;
  #L0c30a8.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c30ae.  v11:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L0c30b2.  v12:= 1I;
  #L0c30b4.  v12:= new `java.lang.Object`[v12];
  #L0c30b8.  v13:= 0I;
  #L0c30ba.  v14:= "tasks" @kind object;
  #L0c30be.  v12[v13]:= v14 @kind object;
  #L0c30c2.  call temp:= `format`(v11, v12) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c30c8.  v11:= temp @kind object;
  #L0c30ca.  v0:= v16 @kind object;
  #L0c30ce.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c30d4.  v11:= "insert into tasks(_id,name) select _id,name from temp;" @kind object;
  #L0c30d8.  v0:= v16 @kind object;
  #L0c30dc.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c30e2.  v11:= "drop table temp;" @kind object;
  #L0c30e6.  v0:= v16 @kind object;
  #L0c30ea.  call `execSQL`(v0, v11) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c30f0.  goto L0c301e;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L0c2f86;
}

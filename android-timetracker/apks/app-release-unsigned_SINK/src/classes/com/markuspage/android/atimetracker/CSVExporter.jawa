record `com.markuspage.android.atimetracker.CSVExporter` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.markuspage.android.atimetracker.CSVExporter` v0 @kind this) @signature `Lcom/markuspage/android/atimetracker/CSVExporter;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L12c6f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12c6fa.  return @kind void;
}
procedure `java.lang.String` `escape`(`java.lang.String` v2 @kind object) @signature `Lcom/markuspage/android/atimetracker/CSVExporter;.escape:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L12c67c.  if v2 != 0 then goto L12c686;
  #L12c680.  v2:= "" @kind object;
  #L12c684.  return v2 @kind object;
  #L12c686.  v0:= "," @kind object;
  #L12c68a.  call temp:= `contains`(v2, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L12c690.  v0:= temp;
  #L12c692.  if v0 != 0 then goto L12c6a6;
  #L12c696.  v0:= "\"" @kind object;
  #L12c69a.  call temp:= `contains`(v2, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L12c6a0.  v0:= temp;
  #L12c6a2.  if v0 == 0 then goto L12c6e2;
  #L12c6a6.  v0:= "\"" @kind object;
  #L12c6aa.  v1:= "\"\"" @kind object;
  #L12c6ae.  call temp:= `replaceAll`(v2, v0, v1) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L12c6b4.  v2:= temp @kind object;
  #L12c6b6.  v0:= new `java.lang.StringBuilder`;
  #L12c6ba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12c6c0.  v1:= "\"" @kind object;
  #L12c6c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12c6ca.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12c6d0.  v2:= "\"" @kind object;
  #L12c6d4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12c6da.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12c6e0.  v2:= temp @kind object;
  #L12c6e2.  return v2 @kind object;
}
procedure `void` `exportRows`(`java.io.OutputStream` v7 @kind object, `android.database.Cursor` v8 @kind object) @signature `Lcom/markuspage/android/atimetracker/CSVExporter;.exportRows:(Ljava/io/OutputStream;Landroid/database/Cursor;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L12c70c.  v0:= new `java.io.PrintStream`;
  #L12c710.  call `<init>`(v0, v7) @signature `Ljava/io/PrintStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L12c716.  v7:= "" @kind object;
  #L12c71a.  call temp:= `getColumnNames`(v8) @signature `Landroid/database/Cursor;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L12c720.  v1:= temp @kind object;
  #L12c722.  v2:= length @variable v1;
  #L12c724.  v3:= 0I;
  #L12c726.  v4:= v7 @kind object;
  #L12c728.  v7:= v3;
  #L12c72a.  if v7 >= v2 then goto L12c750;
  #L12c72e.  v5:= v1[v7] @kind object;
  #L12c732.  call `print`(v0, v4) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L12c738.  call temp:= `escape`(v5) @signature `Lcom/markuspage/android/atimetracker/CSVExporter;.escape:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L12c73e.  v4:= temp @kind object;
  #L12c740.  call `print`(v0, v4) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L12c746.  v4:= "," @kind object;
  #L12c74a.  v7:= v7 + 1;
  #L12c74e.  goto L12c72a;
  #L12c750.  call temp:= `moveToFirst`(v8) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L12c756.  v7:= temp;
  #L12c758.  if v7 == 0 then goto L12c82a;
  #L12c75c.  v7:= new `java.util.Date`;
  #L12c760.  call `<init>`(v7) @signature `Ljava/util/Date;.<init>:()V` @kind direct;
  #L12c766.  v2:= new `java.text.SimpleDateFormat`;
  #L12c76a.  v4:= "yyyy-MM-dd HH:mm:ss" @kind object;
  #L12c76e.  call `<init>`(v2, v4) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12c774.  call `println`(v0) @signature `Ljava/io/PrintStream;.println:()V` @kind virtual;
  #L12c77a.  v4:= "" @kind object;
  #L12c77e.  v5:= v4 @kind object;
  #L12c780.  v4:= v3;
  #L12c782.  call temp:= `getColumnCount`(v8) @signature `Landroid/database/Cursor;.getColumnCount:()I` @kind interface;
  #L12c788.  v6:= temp;
  #L12c78a.  if v4 >= v6 then goto L12c81e;
  #L12c78e.  call `print`(v0, v5) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L12c794.  v5:= v1[v4] @kind object;
  #L12c798.  v6:= "start" @kind object;
  #L12c79c.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12c7a2.  v5:= temp;
  #L12c7a4.  if v5 == 0 then goto L12c7c0;
  #L12c7a8.  call temp:= `getLong`(v8, v4) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L12c7ae.  v5:= temp @kind wide;
  #L12c7b0.  call `setTime`(v7, v5) @signature `Ljava/util/Date;.setTime:(J)V` @kind virtual;
  #L12c7b6.  call temp:= `format`(v2, v7) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L12c7bc.  v5:= temp @kind object;
  #L12c7be.  goto L12c80e;
  #L12c7c0.  v5:= v1[v4] @kind object;
  #L12c7c4.  v6:= "end" @kind object;
  #L12c7c8.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12c7ce.  v5:= temp;
  #L12c7d0.  if v5 == 0 then goto L12c7fe;
  #L12c7d4.  call temp:= `isNull`(v8, v4) @signature `Landroid/database/Cursor;.isNull:(I)Z` @kind interface;
  #L12c7da.  v5:= temp;
  #L12c7dc.  if v5 == 0 then goto L12c7e6;
  #L12c7e0.  v5:= "" @kind object;
  #L12c7e4.  goto L12c80e;
  #L12c7e6.  call temp:= `getLong`(v8, v4) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L12c7ec.  v5:= temp @kind wide;
  #L12c7ee.  call `setTime`(v7, v5) @signature `Ljava/util/Date;.setTime:(J)V` @kind virtual;
  #L12c7f4.  call temp:= `format`(v2, v7) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L12c7fa.  v5:= temp @kind object;
  #L12c7fc.  goto L12c80e;
  #L12c7fe.  call temp:= `getString`(v8, v4) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L12c804.  v5:= temp @kind object;
  #L12c806.  call temp:= `escape`(v5) @signature `Lcom/markuspage/android/atimetracker/CSVExporter;.escape:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L12c80c.  v5:= temp @kind object;
  #L12c80e.  call `print`(v0, v5) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L12c814.  v5:= "," @kind object;
  #L12c818.  v4:= v4 + 1;
  #L12c81c.  goto L12c782;
  #L12c81e.  call temp:= `moveToNext`(v8) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L12c824.  v4:= temp;
  #L12c826.  if v4 != 0 then goto L12c774;
  #L12c82a.  call `println`(v0) @signature `Ljava/io/PrintStream;.println:()V` @kind virtual;
  #L12c830.  return @kind void;
}
procedure `void` `exportRows`(`java.io.OutputStream` v8 @kind object, `java.lang.String`[][] v9 @kind object) @signature `Lcom/markuspage/android/atimetracker/CSVExporter;.exportRows:(Ljava/io/OutputStream;[[Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L12c844.  v0:= new `java.io.PrintStream`;
  #L12c848.  call `<init>`(v0, v8) @signature `Ljava/io/PrintStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L12c84e.  v8:= length @variable v9;
  #L12c850.  v1:= 0I;
  #L12c852.  v2:= v1;
  #L12c854.  if v2 >= v8 then goto L12c898;
  #L12c858.  v3:= v9[v2] @kind object;
  #L12c85c.  v4:= "" @kind object;
  #L12c860.  v5:= length @variable v3;
  #L12c862.  v6:= v4 @kind object;
  #L12c864.  v4:= v1;
  #L12c866.  if v4 >= v5 then goto L12c88c;
  #L12c86a.  v7:= v3[v4] @kind object;
  #L12c86e.  call `print`(v0, v6) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L12c874.  call temp:= `escape`(v7) @signature `Lcom/markuspage/android/atimetracker/CSVExporter;.escape:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L12c87a.  v6:= temp @kind object;
  #L12c87c.  call `print`(v0, v6) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L12c882.  v6:= "," @kind object;
  #L12c886.  v4:= v4 + 1;
  #L12c88a.  goto L12c866;
  #L12c88c.  call `println`(v0) @signature `Ljava/io/PrintStream;.println:()V` @kind virtual;
  #L12c892.  v2:= v2 + 1;
  #L12c896.  goto L12c854;
  #L12c898.  return @kind void;
}

record `com.markuspage.android.atimetracker.DBHelper` @kind class @AccessFlag PUBLIC extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
  `java.lang.String` `com.markuspage.android.atimetracker.DBHelper.dataLeAk125` @AccessFlag ;
  `java.lang.String` `com.markuspage.android.atimetracker.DBHelper.dataLeAk126` @AccessFlag ;
  `java.lang.String` `com.markuspage.android.atimetracker.DBHelper.dataLeAk127` @AccessFlag ;
}
global `java.lang.String`[] `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_COLUMNS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_ID` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_TABLE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.CREATE_ACTIVITY_TABLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.markuspage.android.atimetracker.DBHelper.DBVERSION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.END` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ID_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.RANGES_TABLE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@com.markuspage.android.atimetracker.DBHelper.RANGE_COLUMNS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.START` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.TIMETRACKER_DB_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/markuspage/android/atimetracker/DBHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L12d3b8.  v0:= "start" @kind object;
  #L12d3bc.  v1:= "end" @kind object;
  #L12d3c0.  temp:= new `java.lang.String`[v0, v1];
  #L12d3c6.  v0:= temp @kind object;
  #L12d3c8.  `@@com.markuspage.android.atimetracker.DBHelper.RANGE_COLUMNS` @type ^`java.lang.String`[] := v0 @kind object;
  #L12d3cc.  v0:= "ROWID" @kind object;
  #L12d3d0.  v1:= "name" @kind object;
  #L12d3d4.  temp:= new `java.lang.String`[v0, v1];
  #L12d3da.  v0:= temp @kind object;
  #L12d3dc.  `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_COLUMNS` @type ^`java.lang.String`[] := v0 @kind object;
  #L12d3e0.  return @kind void;
}
procedure `void` `<init>`(`com.markuspage.android.atimetracker.DBHelper` v3 @kind this, `android.content.Context` v4 @kind object) @signature `Lcom/markuspage/android/atimetracker/DBHelper;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L12d3f4.  v0:= "timetracker.db" @kind object;
  #L12d3f8.  v1:= 0I;
  #L12d3fa.  v2:= 5I;
  #L12d3fc.  call `<init>`(v3, v4, v0, v1, v2) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L12d402.  v4:= "" @kind object;
  #L12d406.  v3.`com.markuspage.android.atimetracker.DBHelper.dataLeAk127` @type ^`java.lang.String` := v4 @kind object;
  #L12d40a.  v4:= "" @kind object;
  #L12d40e.  v3.`com.markuspage.android.atimetracker.DBHelper.dataLeAk126` @type ^`java.lang.String` := v4 @kind object;
  #L12d412.  v4:= "" @kind object;
  #L12d416.  v3.`com.markuspage.android.atimetracker.DBHelper.dataLeAk125` @type ^`java.lang.String` := v4 @kind object;
  #L12d41a.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L12d420.  v4:= temp @kind object;
  #L12d422.  call temp:= `getTimeZone`(v4) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L12d428.  v4:= temp @kind object;
  #L12d42a.  call temp:= `getDisplayName`(v4) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L12d430.  v4:= temp @kind object;
  #L12d432.  v3.`com.markuspage.android.atimetracker.DBHelper.dataLeAk125` @type ^`java.lang.String` := v4 @kind object;
  #L12d436.  v4:= "leak-125-0" @kind object;
  #L12d43a.  v0:= v3.`com.markuspage.android.atimetracker.DBHelper.dataLeAk125` @type ^`java.lang.String` @kind object;
  #L12d43e.  call temp:= `d`(v4, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12d444.  v4:= "leak-126-0" @kind object;
  #L12d448.  v0:= v3.`com.markuspage.android.atimetracker.DBHelper.dataLeAk126` @type ^`java.lang.String` @kind object;
  #L12d44c.  call temp:= `d`(v4, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12d452.  v4:= "leak-127-0" @kind object;
  #L12d456.  v3:= v3.`com.markuspage.android.atimetracker.DBHelper.dataLeAk127` @type ^`java.lang.String` @kind object;
  #L12d45a.  call temp:= `d`(v4, v3) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12d460.  return @kind void;
}
procedure `void` `onCreate`(`com.markuspage.android.atimetracker.DBHelper` v3 @kind this, `android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Lcom/markuspage/android/atimetracker/DBHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L12d474.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L12d47a.  v0:= temp @kind object;
  #L12d47c.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L12d482.  v0:= temp @kind object;
  #L12d484.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L12d48a.  v0:= temp @kind object;
  #L12d48c.  v3.`com.markuspage.android.atimetracker.DBHelper.dataLeAk126` @type ^`java.lang.String` := v0 @kind object;
  #L12d490.  v0:= "leak-125-1" @kind object;
  #L12d494.  v1:= v3.`com.markuspage.android.atimetracker.DBHelper.dataLeAk125` @type ^`java.lang.String` @kind object;
  #L12d498.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12d49e.  v0:= "leak-126-1" @kind object;
  #L12d4a2.  v1:= v3.`com.markuspage.android.atimetracker.DBHelper.dataLeAk126` @type ^`java.lang.String` @kind object;
  #L12d4a6.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12d4ac.  v0:= "leak-127-1" @kind object;
  #L12d4b0.  v3:= v3.`com.markuspage.android.atimetracker.DBHelper.dataLeAk127` @type ^`java.lang.String` @kind object;
  #L12d4b4.  call temp:= `d`(v0, v3) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12d4ba.  v3:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L12d4be.  v0:= 1I;
  #L12d4c0.  v0:= new `java.lang.Object`[v0];
  #L12d4c4.  v1:= "tasks" @kind object;
  #L12d4c8.  v2:= 0I;
  #L12d4ca.  v0[v2]:= v1 @kind object;
  #L12d4ce.  call temp:= `format`(v3, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L12d4d4.  v3:= temp @kind object;
  #L12d4d6.  call `execSQL`(v4, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d4dc.  v3:= "CREATE TABLE ranges(task_id INTEGER NOT NULL,start INTEGER NOT NULL,end INTEGER);" @kind object;
  #L12d4e0.  call `execSQL`(v4, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d4e6.  return @kind void;
}
procedure `void` `onUpgrade`(`com.markuspage.android.atimetracker.DBHelper` v2 @kind this, `android.database.sqlite.SQLiteDatabase` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/markuspage/android/atimetracker/DBHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12d4f8.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L12d4fe.  v5:= temp @kind object;
  #L12d500.  call temp:= `getTimeZone`(v5) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L12d506.  v5:= temp @kind object;
  #L12d508.  call temp:= `getDisplayName`(v5) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L12d50e.  v5:= temp @kind object;
  #L12d510.  v2.`com.markuspage.android.atimetracker.DBHelper.dataLeAk127` @type ^`java.lang.String` := v5 @kind object;
  #L12d514.  v5:= "leak-125-2" @kind object;
  #L12d518.  v0:= v2.`com.markuspage.android.atimetracker.DBHelper.dataLeAk125` @type ^`java.lang.String` @kind object;
  #L12d51c.  call temp:= `d`(v5, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12d522.  v5:= "leak-126-2" @kind object;
  #L12d526.  v0:= v2.`com.markuspage.android.atimetracker.DBHelper.dataLeAk126` @type ^`java.lang.String` @kind object;
  #L12d52a.  call temp:= `d`(v5, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12d530.  v5:= "leak-127-2" @kind object;
  #L12d534.  v2:= v2.`com.markuspage.android.atimetracker.DBHelper.dataLeAk127` @type ^`java.lang.String` @kind object;
  #L12d538.  call temp:= `d`(v5, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12d53e.  v2:= 0I;
  #L12d540.  v5:= 1I;
  #L12d542.  v0:= 4I;
  #L12d544.  if v4 >= v0 then goto L12d5ae;
  #L12d548.  v4:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L12d54c.  v0:= new `java.lang.Object`[v5];
  #L12d550.  v1:= "temp" @kind object;
  #L12d554.  v0[v2]:= v1 @kind object;
  #L12d558.  call temp:= `format`(v4, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L12d55e.  v4:= temp @kind object;
  #L12d560.  call `execSQL`(v3, v4) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d566.  v4:= "insert into temp(rowid,name) select rowid,name from tasks;" @kind object;
  #L12d56a.  call `execSQL`(v3, v4) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d570.  v4:= "drop table tasks;" @kind object;
  #L12d574.  call `execSQL`(v3, v4) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d57a.  v4:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L12d57e.  v5:= new `java.lang.Object`[v5];
  #L12d582.  v0:= "tasks" @kind object;
  #L12d586.  v5[v2]:= v0 @kind object;
  #L12d58a.  call temp:= `format`(v4, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L12d590.  v2:= temp @kind object;
  #L12d592.  call `execSQL`(v3, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d598.  v2:= "insert into tasks(_id,name) select rowid,name from temp;" @kind object;
  #L12d59c.  call `execSQL`(v3, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d5a2.  v2:= "drop table temp;" @kind object;
  #L12d5a6.  call `execSQL`(v3, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d5ac.  goto L12d618;
  #L12d5ae.  v0:= 5I;
  #L12d5b0.  if v4 >= v0 then goto L12d618;
  #L12d5b4.  v4:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L12d5b8.  v0:= new `java.lang.Object`[v5];
  #L12d5bc.  v1:= "temp" @kind object;
  #L12d5c0.  v0[v2]:= v1 @kind object;
  #L12d5c4.  call temp:= `format`(v4, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L12d5ca.  v4:= temp @kind object;
  #L12d5cc.  call `execSQL`(v3, v4) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d5d2.  v4:= "insert into temp(_id,name) select rowid,name from tasks;" @kind object;
  #L12d5d6.  call `execSQL`(v3, v4) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d5dc.  v4:= "drop table tasks;" @kind object;
  #L12d5e0.  call `execSQL`(v3, v4) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d5e6.  v4:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L12d5ea.  v5:= new `java.lang.Object`[v5];
  #L12d5ee.  v0:= "tasks" @kind object;
  #L12d5f2.  v5[v2]:= v0 @kind object;
  #L12d5f6.  call temp:= `format`(v4, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L12d5fc.  v2:= temp @kind object;
  #L12d5fe.  call `execSQL`(v3, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d604.  v2:= "insert into tasks(_id,name) select _id,name from temp;" @kind object;
  #L12d608.  call `execSQL`(v3, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d60e.  v2:= "drop table temp;" @kind object;
  #L12d612.  call `execSQL`(v3, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L12d618.  return @kind void;
}

record `com.markuspage.android.atimetracker.DBHelper` @kind class @AccessFlag PUBLIC extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
  `java.lang.String` `com.markuspage.android.atimetracker.DBHelper.dataLeAk275` @AccessFlag ;
  `java.lang.Object` `com.markuspage.android.atimetracker.DBHelper.throwawayLeAk275` @AccessFlag ;
}
global `java.lang.String`[] `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_COLUMNS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_ID` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_TABLE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.CREATE_ACTIVITY_TABLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.markuspage.android.atimetracker.DBHelper.DBVERSION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.END` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.ID_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.RANGES_TABLE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@com.markuspage.android.atimetracker.DBHelper.RANGE_COLUMNS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.START` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.markuspage.android.atimetracker.DBHelper.TIMETRACKER_DB_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/markuspage/android/atimetracker/DBHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0c0390.  v4:= 2I;
  #L0c0392.  v3:= 1I;
  #L0c0394.  v2:= 0I;
  #L0c0396.  v0:= new `java.lang.String`[v4];
  #L0c039a.  v1:= "start" @kind object;
  #L0c039e.  v0[v2]:= v1 @kind object;
  #L0c03a2.  v1:= "end" @kind object;
  #L0c03a6.  v0[v3]:= v1 @kind object;
  #L0c03aa.  `@@com.markuspage.android.atimetracker.DBHelper.RANGE_COLUMNS` @type ^`java.lang.String`[] := v0 @kind object;
  #L0c03ae.  v0:= new `java.lang.String`[v4];
  #L0c03b2.  v1:= "ROWID" @kind object;
  #L0c03b6.  v0[v2]:= v1 @kind object;
  #L0c03ba.  v1:= "name" @kind object;
  #L0c03be.  v0[v3]:= v1 @kind object;
  #L0c03c2.  `@@com.markuspage.android.atimetracker.DBHelper.ACTIVITY_COLUMNS` @type ^`java.lang.String`[] := v0 @kind object;
  #L0c03c6.  return @kind void;
}
procedure `void` `<init>`(`com.markuspage.android.atimetracker.DBHelper` v5 @kind this, `android.content.Context` v6 @kind object @name `context`) @signature `Lcom/markuspage/android/atimetracker/DBHelper;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0c03d8.  v2:= "timetracker.db" @kind object;
  #L0c03dc.  v3:= 0I;
  #L0c03de.  v4:= 5I;
  #L0c03e0.  call `<init>`(v5, v6, v2, v3, v4) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L0c03e6.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0c03ec.  v2:= temp @kind object;
  #L0c03ee.  call temp:= `getTimeZone`(v2) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0c03f4.  v2:= temp @kind object;
  #L0c03f6.  call temp:= `getDisplayName`(v2) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0c03fc.  v2:= temp @kind object;
  #L0c03fe.  v5.`com.markuspage.android.atimetracker.DBHelper.dataLeAk275` @type ^`java.lang.String` := v2 @kind object;
  #L0c0402.  v2:= "leak-275" @kind object;
  #L0c0406.  v3:= v5.`com.markuspage.android.atimetracker.DBHelper.dataLeAk275` @type ^`java.lang.String` @kind object;
  #L0c040a.  call temp:= `d`(v2, v3) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0c0410.  v2:= temp;
  #L0c0412.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0c0418.  v2:= temp @kind object;
  #L0c041a.  v5.`com.markuspage.android.atimetracker.DBHelper.throwawayLeAk275` @type ^`java.lang.Object` := v2 @kind object;
  #L0c041e.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0c0424.  v2:= temp @kind object;
  #L0c0426.  call temp:= `getTimeZone`(v2) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0c042c.  v2:= temp @kind object;
  #L0c042e.  call temp:= `getDisplayName`(v2) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0c0434.  v0:= temp @kind object;
  #L0c0436.  v2:= "leak-276" @kind object;
  #L0c043a.  call temp:= `d`(v2, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0c0440.  v2:= temp;
  #L0c0442.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0c0448.  v1:= temp @kind object;
  #L0c044a.  return @kind void;
}
procedure `void` `onCreate`(`com.markuspage.android.atimetracker.DBHelper` v6 @kind this, `android.database.sqlite.SQLiteDatabase` v7 @kind object @name `db`) @signature `Lcom/markuspage/android/atimetracker/DBHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0c045c.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0c0462.  v2:= temp @kind object;
  #L0c0464.  call temp:= `getTimeZone`(v2) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0c046a.  v2:= temp @kind object;
  #L0c046c.  call temp:= `getDisplayName`(v2) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0c0472.  v0:= temp @kind object;
  #L0c0474.  v2:= "leak-277" @kind object;
  #L0c0478.  call temp:= `d`(v2, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0c047e.  v2:= temp;
  #L0c0480.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0c0486.  v1:= temp @kind object;
  #L0c0488.  v2:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L0c048c.  v3:= 1I;
  #L0c048e.  v3:= new `java.lang.Object`[v3];
  #L0c0492.  v4:= 0I;
  #L0c0494.  v5:= "tasks" @kind object;
  #L0c0498.  v3[v4]:= v5 @kind object;
  #L0c049c.  call temp:= `format`(v2, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c04a2.  v2:= temp @kind object;
  #L0c04a4.  call `execSQL`(v7, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c04aa.  v2:= "CREATE TABLE ranges(task_id INTEGER NOT NULL,start INTEGER NOT NULL,end INTEGER);" @kind object;
  #L0c04ae.  call `execSQL`(v7, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c04b4.  return @kind void;
}
procedure `void` `onUpgrade`(`com.markuspage.android.atimetracker.DBHelper` v11 @kind this, `android.database.sqlite.SQLiteDatabase` v12 @kind object @name `arg0`, `int` v13 @name `oldVersion`, `int` v14 @name `newVersion`) @signature `Lcom/markuspage/android/atimetracker/DBHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L0c04c8.  v10:= 1I;
  #L0c04ca.  v9:= 0I;
  #L0c04cc.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0c04d2.  v6:= temp @kind object;
  #L0c04d4.  call temp:= `getTimeZone`(v6) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0c04da.  v6:= temp @kind object;
  #L0c04dc.  call temp:= `getDisplayName`(v6) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0c04e2.  v0:= temp @kind object;
  #L0c04e4.  v6:= "leak-278" @kind object;
  #L0c04e8.  call temp:= `d`(v6, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0c04ee.  v6:= temp;
  #L0c04f0.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0c04f6.  v3:= temp @kind object;
  #L0c04f8.  v6:= 4I;
  #L0c04fa.  if v13 >= v6 then goto L0c0590;
  #L0c04fe.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0c0504.  v6:= temp @kind object;
  #L0c0506.  call temp:= `getTimeZone`(v6) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0c050c.  v6:= temp @kind object;
  #L0c050e.  call temp:= `getDisplayName`(v6) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0c0514.  v1:= temp @kind object;
  #L0c0516.  v6:= "leak-279" @kind object;
  #L0c051a.  call temp:= `d`(v6, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0c0520.  v6:= temp;
  #L0c0522.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0c0528.  v4:= temp @kind object;
  #L0c052a.  v6:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L0c052e.  v7:= new `java.lang.Object`[v10];
  #L0c0532.  v8:= "temp" @kind object;
  #L0c0536.  v7[v9]:= v8 @kind object;
  #L0c053a.  call temp:= `format`(v6, v7) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c0540.  v6:= temp @kind object;
  #L0c0542.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c0548.  v6:= "insert into temp(rowid,name) select rowid,name from tasks;" @kind object;
  #L0c054c.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c0552.  v6:= "drop table tasks;" @kind object;
  #L0c0556.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c055c.  v6:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L0c0560.  v7:= new `java.lang.Object`[v10];
  #L0c0564.  v8:= "tasks" @kind object;
  #L0c0568.  v7[v9]:= v8 @kind object;
  #L0c056c.  call temp:= `format`(v6, v7) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c0572.  v6:= temp @kind object;
  #L0c0574.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c057a.  v6:= "insert into tasks(_id,name) select rowid,name from temp;" @kind object;
  #L0c057e.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c0584.  v6:= "drop table temp;" @kind object;
  #L0c0588.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c058e.  return @kind void;
  #L0c0590.  v6:= 5I;
  #L0c0592.  if v13 >= v6 then goto L0c058e;
  #L0c0596.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0c059c.  v6:= temp @kind object;
  #L0c059e.  call temp:= `getTimeZone`(v6) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0c05a4.  v6:= temp @kind object;
  #L0c05a6.  call temp:= `getDisplayName`(v6) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0c05ac.  v2:= temp @kind object;
  #L0c05ae.  v6:= "leak-280" @kind object;
  #L0c05b2.  call temp:= `d`(v6, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0c05b8.  v6:= temp;
  #L0c05ba.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0c05c0.  v5:= temp @kind object;
  #L0c05c2.  v6:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L0c05c6.  v7:= new `java.lang.Object`[v10];
  #L0c05ca.  v8:= "temp" @kind object;
  #L0c05ce.  v7[v9]:= v8 @kind object;
  #L0c05d2.  call temp:= `format`(v6, v7) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c05d8.  v6:= temp @kind object;
  #L0c05da.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c05e0.  v6:= "insert into temp(_id,name) select rowid,name from tasks;" @kind object;
  #L0c05e4.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c05ea.  v6:= "drop table tasks;" @kind object;
  #L0c05ee.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c05f4.  v6:= "CREATE TABLE %s (_id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT COLLATE LOCALIZED NOT NULL);" @kind object;
  #L0c05f8.  v7:= new `java.lang.Object`[v10];
  #L0c05fc.  v8:= "tasks" @kind object;
  #L0c0600.  v7[v9]:= v8 @kind object;
  #L0c0604.  call temp:= `format`(v6, v7) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0c060a.  v6:= temp @kind object;
  #L0c060c.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c0612.  v6:= "insert into tasks(_id,name) select _id,name from temp;" @kind object;
  #L0c0616.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c061c.  v6:= "drop table temp;" @kind object;
  #L0c0620.  call `execSQL`(v12, v6) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L0c0626.  goto L0c058e;
}
